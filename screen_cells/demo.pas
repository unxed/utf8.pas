program MyProgram;

//{$codepage UTF8}
{$mode objfpc}{$H+}

uses
  lazutf8,
  cwstring,
  ctypes;

// –û–±—ä—è–≤–ª–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
function mbrtowc(pwc: PUCS4Char; s: PAnsiChar; n: csize_t; ps: Pointer): csize_t; cdecl; external 'libc';
function wcwidth(wc: cint): cint; cdecl; external 'libc';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —ç–∫—Ä–∞–Ω–Ω—ã—Ö —è—á–µ–µ–∫
function CountScreenCells(const str: AnsiString): Integer;
var
  mbstate: Pointer;
  wc: UCS4Char;
  p: PAnsiChar;
  len: csize_t;
  totalWidth: Integer;
begin
  totalWidth := 0;
  mbstate := nil; 
  p := PAnsiChar(str);

  while p^ <> #0 do
  begin

    len := mbrtowc(@wc, p, 6, mbstate); 
    if (len = csize_t(-1)) or (len = csize_t(-2)) then
      Break;

    // 128578

    if wcwidth(Integer(wc)) > 0 then
      Inc(totalWidth, wcwidth(Integer(wc)));

    // writeln('-- ', wcwidth(LongInt(wc)), ' - ', wc, ' - ', LongInt(wc), ' - ', len);

    Inc(p, len);
  end;

  Result := totalWidth;
end;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≥—Ä–∞—Ñ–µ–º
function CountGraphemes(const str: AnsiString): Integer;
var
  mbstate: Pointer;
  wc: UCS4Char;
  p: PAnsiChar;
  len: csize_t;
  count: Integer;
begin
  count := 0;
  mbstate := nil; 
  p := PAnsiChar(str);

  while p^ <> #0 do
  begin
    len := mbrtowc(@wc, p, 6, mbstate); 
    if (len = csize_t(-1)) or (len = csize_t(-2)) then
      Break;

    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ—Å—Ç–∞–≤–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã (–¥–∏–∞–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞–∫–∏)
    if (wcwidth(Integer(wc)) = 0) or (wc = UCS4Char(#0)) then
    begin
      Inc(p, len);
      Continue;
    end;

    Inc(count);
    Inc(p, len);
  end;

  Result := count;
end;

var
  s: AnsiString;
  screenCells: Integer;
  graphemes: Integer;

begin
  // 16 bytes, 7 code points, 6 screen cells, 5 graphemes
  s := 'a1üôÇ‚ù§Ô∏è–µÃà';

  // –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π –ø–æ–¥—Å—á–µ—Ç–∞
  screenCells := CountScreenCells(s);
  graphemes := CountGraphemes(s);

  // –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  WriteLn();
  WriteLn('–°—Ç—Ä–æ–∫–∞: ', s);
  WriteLn('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä–∞—Ñ–µ–º: ', graphemes);
  WriteLn('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–∫—Ä–∞–Ω–Ω—ã—Ö —è—á–µ–µ–∫: ', screenCells);
  writeln('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–¥–æ–≤—ã—Ö —Ç–æ—á–µ–∫: ', UTF8Length(s));

  // WriteLn('** –®–∏—Ä–∏–Ω–∞ —Å–∏–º–≤–æ–ª–∞: ', wcwidth(128512)); // U+1F600

  // writeln('max: ', csize_t(High(AnsiChar)));

  ReadLn;
end.